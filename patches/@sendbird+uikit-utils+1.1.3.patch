diff --git a/node_modules/@sendbird/uikit-utils/src/sendbird/channel.ts b/node_modules/@sendbird/uikit-utils/src/sendbird/channel.ts
index 56d2df1..5c9016c 100644
--- a/node_modules/@sendbird/uikit-utils/src/sendbird/channel.ts
+++ b/node_modules/@sendbird/uikit-utils/src/sendbird/channel.ts
@@ -1,3 +1,4 @@
+import { CONST_TYPES } from '../../../../../app/uikit-app';
 import type { SendbirdBaseChannel, SendbirdChannel, SendbirdGroupChannel, SendbirdOpenChannel } from '../types';
 
 /**
@@ -12,21 +13,25 @@ export function isDifferentChannel<T extends SendbirdBaseChannel>(a?: T, b?: T):
 }
 
 export const groupChannelChatUnavailable = (channel: SendbirdGroupChannel) => {
-  return channel.myMutedState === 'muted' || (channel.isFrozen && channel.myRole !== 'operator');
+  
+  // if ((channel.customType == CONST_TYPES.ROOM_DIRECT || channel.customType == '') && channel.myMutedState === 'muted') {
+  //   return false
+  // }
+  return channel?.myMutedState === 'muted' || (channel?.isFrozen && channel?.myRole !== 'operator');
 };
 
 export function isDefaultCoverImage(coverUrl: string) {
-  return coverUrl === '' || coverUrl.startsWith('https://static.sendbird.com/sample/cover');
+  return coverUrl === '' || coverUrl?.startsWith('https://static.sendbird.com/sample/cover');
 }
 
 export function getMembersExcludeMe(channel: SendbirdGroupChannel, currentUserId?: string) {
-  return channel.members.filter((m) => m.userId !== currentUserId);
+  return channel?.members?.filter((m) => m?.userId !== currentUserId);
 }
 
 export function getGroupChannels(channels: SendbirdChannel[]): SendbirdGroupChannel[] {
-  return channels.filter((c): c is SendbirdGroupChannel => c.isGroupChannel());
+  return channels?.filter((c): c is SendbirdGroupChannel => c.isGroupChannel());
 }
 
 export function getOpenChannels(channels: SendbirdChannel[]): SendbirdOpenChannel[] {
-  return channels.filter((c): c is SendbirdOpenChannel => c.isOpenChannel());
+  return channels?.filter((c): c is SendbirdOpenChannel => c.isOpenChannel());
 }
diff --git a/node_modules/@sendbird/uikit-utils/src/ui-format/groupChannel.ts b/node_modules/@sendbird/uikit-utils/src/ui-format/groupChannel.ts
index 09395f5..a51f2cc 100644
--- a/node_modules/@sendbird/uikit-utils/src/ui-format/groupChannel.ts
+++ b/node_modules/@sendbird/uikit-utils/src/ui-format/groupChannel.ts
@@ -2,7 +2,7 @@ import type { Locale } from 'date-fns';
 import format from 'date-fns/format';
 import isToday from 'date-fns/isToday';
 import isYesterday from 'date-fns/isYesterday';
-
+import { getrelamContactName } from '../../../../../src/commonAction';
 import type { SendbirdGroupChannel } from '../types';
 import { truncate } from './common';
 
@@ -17,17 +17,37 @@ export const getGroupChannelTitle = (
   if (channel.memberCount === 1) return NO_MEMBERS;
   return channel.members
     .filter(({ userId }) => userId !== currentUserId)
-    .map(({ nickname }) => nickname || EMPTY_USERNAME)
+    // .map(({ nickname }) => nickname || EMPTY_USERNAME)
+    .map(({ metaData }) => getrelamContactName(metaData?.phone) || EMPTY_USERNAME)
     .join(', ');
 };
 
 export const getGroupChannelPreviewTime = (channel: SendbirdGroupChannel, locale?: Locale) => {
+  if (channel?.channelType === 'open') {
+    console.log('channel ==> ', channel);
+    return '';
+  }
   const timestamp = channel.lastMessage?.createdAt || channel.joinedAt * 1000 || channel.createdAt;
   if (isToday(timestamp)) return format(timestamp, 'p', { locale });
   if (isYesterday(timestamp)) return 'Yesterday';
   return format(timestamp, 'MMM dd', { locale });
 };
 
+
+const CustomText = (messages) => {
+  const message = messages.split(' ');
+  return message.map(text => {
+    if (text.includes('@+')) {
+      return '@' + getrelamContactName(text.slice(1))
+    } else if (text.includes('@')) {
+      let text_g = text
+      return text_g;
+    } else {
+      return `${text} `;
+    }
+  });
+}
+
 export const getGroupChannelLastMessage = (channel: SendbirdGroupChannel, EMPTY_MESSAGE = '', MAX_LEN = 15) => {
   const message = channel.lastMessage;
   if (!message) return EMPTY_MESSAGE;
@@ -43,5 +63,5 @@ export const getGroupChannelLastMessage = (channel: SendbirdGroupChannel, EMPTY_
     return truncate(message.name, { maxLen: MAX_LEN });
   }
 
-  return message.message ?? EMPTY_MESSAGE;
+  return CustomText(message.message) ?? EMPTY_MESSAGE;
 };
